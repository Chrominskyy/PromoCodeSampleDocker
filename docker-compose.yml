version: '3.8'

services:
  azure-db:
    image: mcr.microsoft.com/azure-sql-edge:latest
    container_name: "db"
    environment:
      SA_PASSWORD: "ergo.1234"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    networks:
      - app-network

  promo-code-api:
    image: promo-code-api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: false
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_Kestrel__Endpoints__Http__Url: "http://0.0.0.0:8080"
      ASPNETCORE_Kestrel__Endpoints__Https__Url: "https://0.0.0.0:8081"
      ASPNETCORE_Kestrel__Certificates__Default__Path: "/https/aspnetapp.pfx"
      ASPNETCORE_Kestrel__Certificates__Default__Password: "ergo.1234"
      ASPNETCORE_URLS: "https://+:8081;http://+:8080"
    depends_on:
      - azure-db
      - redis
    volumes:
      - ~/.aspnet/https:/https:ro
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: [ "redis-server", "--appendonly", "yes" ]
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  redis-data:
